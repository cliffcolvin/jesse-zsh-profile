alias updategitaliases='cp ~/.aliases /tmp/.aliases-"`date +"%d-%m-%Y-%H-%M-%S"`" & wget https://raw.githubusercontent.com/jessegoodier/jesse-zsh-profile/main/.aliases -O ~/.aliases && omz reload'

# safety check
helm_old() {
if [[ $ZSH_KUBECTL_PROMPT = *"jesse"* ]]; then
 /home/linuxbrew/.linuxbrew/bin/helm $@
else
 echo -n "Realy run this in \n $ZSH_KUBECTL_PROMPT? \n y or any key to cancel: "
 read RUNIT
 if [[ $RUNIT == "y" ]]; then
    /home/linuxbrew/.linuxbrew/bin/helm $@
 else
   echo "Aborted"
 fi
fi
}

alias sp='stern --prompt'
alias kexecfe="kubectl exec -i -t deployment/kubecost-cost-analyzer -c cost-analyzer-frontend --" $1
alias kexeccm="kubectl exec -i -t deployment/kubecost-cost-analyzer -c cost-model --" $1

unalias ksd 2>/dev/null

# use at your own risk. suggest trying in docker first

# vscode on wsl (add this to disable using the windows path)
# /etc/wsl.conf
# [interop]
# appendWindowsPath = false
alias code='/mnt/c/Program\ Files/Microsoft\ VS\ Code/Code.exe'

# aliases
alias ll='ls -lah'
alias h='history'
alias kg='kubectl get'
# kubecost
# Get cost-model container log
alias klcm="kubectl logs --namespace kubecost -l app.kubernetes.io/name=cost-analyzer --tail=-1 -c cost-model"
# Get all logs for cost-analyzer pod (includes frontend):
alias klca="kubectl logs --namespace kubecost --max-log-requests 9 -l app.kubernetes.io/instance=kubecost --tail=-1 --prefix=true --all-containers=true"

alias v='sudo virsh'
alias virsh='sudo virsh'

# clean up images not currently be used
alias drmi='docker rmi -f $(docker images -q)'
alias deit='docker exec -i -t'

# azure
alias azl='az aks list --output table'

# aws
alias eks='eksctl get cluster'


# randoms
alias c='clear'
alias cat='ccat'
# Stop after sending count ECHO_REQUEST packets #
alias ping='ping -c 5'
# Do not wait interval 1 second, go fast #
alias fastping='ping -c 100 -s.2'
alias svi='sudo vi'
## pass options to free ##
alias meminfo='free -m -l -t'

## get top process eating memory
alias psmem='ps auxf | sort -nr -k 4'
alias psmem10='ps auxf | sort -nr -k 4 | head -10'

## get top process eating cpu ##
alias pscpu='ps auxf | sort -nr -k 3'
alias pscpu10='ps auxf | sort -nr -k 3 | head -10'

## Get server cpu info ##
alias cpuinfo='lscpu'
alias df='df -H'
alias du='du -sk * | sort -n | while read size fname; do for unit in k M G T P E Z Y; do if [ $size -lt 1024 ]; then echo -e "${size}${unit}\t${fname}"; break; fi; size=$((size/1024)); done; done'

if [ "$(command -v exa)" ]; then
    alias ll='exa -l --color always --icons -a -s type'
    alias l='exa --color always --icons -a -s type'
    alias la='exa -l --color always --icons -a -s type'
    alias ls='exa -G  --color auto --icons -a -s type'
fi

alias grep='grep --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn,.idea,.tox,.vscode-server-insiders,.vscode-server,.vscode-server-insiders,.vs-kubernetes}'
alias ack='ack --color --ignore-dir={.bzr,CVS,.git,.hg,.svn,.idea,.tox,.vscode-server-insiders,.vscode-server,.vscode-server-insiders,.vs-kubernetes}'

# more kube
alias kg='kubectl get'
alias kgpv='kubectl get pv'
alias kgpvw='kubectl get pv --watch'
alias kgpaw='kubectl get pods --all-namespaces --watch'
alias kgpw='kubectl get pods --watch'
alias kn='kubectl config set-context --current --namespace'
alias kc='kubectl config use-context'
if [ "$(command -v kubectx)" ]; then
  alias kn='kubens'
  alias kx='kubectx'
fi

alias kge='kubectl get events --sort-by='.metadata.creationTimestamp' --field-selector type!=Normal'
alias keit='kubectl exec -i -t'
alias kic="keit -n nginx-ingress \$(kgpn nginx-ingress|grep ingress -m1 |awk '{print \$1}') -- nginx -T | grep '\\S'"
[ -x "$(command -v crossplane)" ] && alias kic="echo \$(keit -n nginx-ingress \$(kgpn nginx-ingress|grep ingress -m1 |awk '{print \$1}') -- nginx -T) |crossplane format /dev/stdin"

# AWS
alias acreds='aws eks update-kubeconfig --region ca-central-1 --name'
# gcloud
# create a cluster
alias gccc='gcloud container clusters create --machine-type e2-standard-4 --num-nodes=1 --zone=us-east1-d --network=creynold-vpc'
# get kube creds for a cluster: gcreds jesse-gk1
gcreds() { ZONE=$(gcloud container clusters list --filter=name:"$1" --format="[no-heading](location)") ; gcloud container clusters get-credentials $1 --zone $ZONE }
#delete a cluster
gccd() { ZONE=$(gcloud container clusters list --filter=name:"$1" --format="[no-heading](location)") ; gcloud container clusters delete $1 --zone $ZONE $2 }
# list all clusters in our project, ignore cluster upgrade and surveys
alias gccl='gcloud container clusters list 2>/dev/null'
alias gcclj='gcloud container clusters list 2>/dev/null --filter=name:jesse --format="(name,location,currentNodeCount)"'
# resize cluster
gccr() { ZONE=$(gcloud container clusters list --filter=name:"$1" --format="[no-heading](location)") ; gcloud container clusters resize $1 --zone $ZONE --num-nodes $2 --quiet}
alias gcdu='gcloud dns record-sets update --type=A --ttl=30 --zone=nginx-rocks --rrdatas'
alias gccil'=gcloud compute instances list |grep jesse'
alias gil'=gcloud compute instances list |grep jesse'
